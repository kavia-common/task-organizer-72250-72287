{"is_source_file": true, "format": "Python", "description": "This file implements authentication routes for user registration, login, and user info retrieval in a Flask-based backend API. It defines schemas for request and response validation, helper functions for JWT token handling, and class-based view endpoints for auth-related operations.", "external_files": ["app.services.db"], "external_methods": ["get_db"], "published": ["blp"], "classes": [{"name": "UserSchema", "description": "Schema representing public user data."}, {"name": "RegisterSchema", "description": "Schema for user registration input data."}, {"name": "LoginSchema", "description": "Schema for login input data."}, {"name": "AuthResponseSchema", "description": "Schema for authentication response containing token and user info."}, {"name": "Register", "description": "Flask view handling user registration (POST /register)."}, {"name": "Login", "description": "Flask view handling user login and JWT token issuance (POST /login)."}, {"name": "Me", "description": "Flask view returning information about the authenticated user (GET /me)."}], "methods": [{"name": "str _now_iso()", "description": "Returns current UTC time in ISO format with 'Z' suffix.", "scope": "", "scopeKind": ""}, {"name": "str _get_jwt_secret()", "description": "Retrieves JWT secret from environment variable, raises if unset.", "scope": "", "scopeKind": ""}, {"name": "timedelta _get_jwt_exp_delta()", "description": "Returns timedelta for JWT expiration based on environment variable or default 24 hours.", "scope": "", "scopeKind": ""}, {"name": "str _create_jwt_token(user_id: str, email: str)", "description": "Creates a JWT token with user ID and email, expiring after configured interval.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _decode_jwt_from_request()", "description": "Extracts and decodes JWT from the Authorization header.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _serialize_user(doc: Dict[str, Any])", "description": "Converts MongoDB user document into serializable dict.", "scope": "", "scopeKind": ""}, {"name": "_strip_email(self, data, **kwargs)", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "get(self)", "scope": "Me", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, email: str, password: str)", "scope": "Login", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, email: str, password: str, name: Optional[str] = None)", "scope": "Register", "scopeKind": "class", "description": "unavailable"}], "calls": ["get_db()", "generate_password_hash(password)", "check_password_hash(doc.get('password_hash', ''), password)", "jwt.encode(payload, secret, algorithm='HS256')", "jwt.decode(token, _get_jwt_secret(), algorithms=['HS256'])"], "search-terms": ["auth routes", "JWT token creation", "user registration", "login validation", "Flask MethodView"], "state": 2, "file_id": 8, "knowledge_revision": 18, "git_revision": "", "ctags": [{"_type": "tag", "name": "AuthResponseSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class AuthResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Login", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class Login(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "LoginSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class LoginSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Me", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class Me(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Register", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class Register(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "RegisterSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class RegisterSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^class UserSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_create_jwt_token", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^def _create_jwt_token(user_id: str, email: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(user_id: str, email: str)"}, {"_type": "tag", "name": "_decode_jwt_from_request", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^def _decode_jwt_from_request() -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_get_jwt_exp_delta", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^def _get_jwt_exp_delta() -> timedelta:$/", "language": "Python", "typeref": "typename:timedelta", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_get_jwt_secret", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^def _get_jwt_secret() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_now_iso", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^def _now_iso() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_serialize_user", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^def _serialize_user(doc: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(doc: Dict[str, Any])"}, {"_type": "tag", "name": "_strip_email", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    def _strip_email(self, data, **kwargs):  # noqa: ANN001$/", "language": "Python", "kind": "member", "signature": "(self, data, **kwargs)", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "_strip_email", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    def _strip_email(self, data, **kwargs):  # noqa: ANN001$/", "language": "Python", "kind": "member", "signature": "(self, data, **kwargs)", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    created_at = fields.String(dump_only=True, description=\"ISO timestamp when created\")$/", "language": "Python", "kind": "variable", "scope": "UserSchema", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"Email for new account\")$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"Registered email\")$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    email = fields.Email(required=True, description=\"User email\")$/", "language": "Python", "kind": "variable", "scope": "UserSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Me", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    id = fields.String(dump_only=True, description=\"User ID\")$/", "language": "Python", "kind": "variable", "scope": "UserSchema", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    name = fields.String(required=False, allow_none=True, description=\"Optional display name\")$/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    name = fields.String(required=False, allow_none=True, description=\"User display name\")$/", "language": "Python", "kind": "variable", "scope": "UserSchema", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    password = fields.String($/", "language": "Python", "kind": "variable", "scope": "RegisterSchema", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    password = fields.String(required=True, load_only=True, description=\"Account password\")$/", "language": "Python", "kind": "variable", "scope": "LoginSchema", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    def post(self, email: str, password: str):$/", "language": "Python", "kind": "member", "signature": "(self, email: str, password: str)", "scope": "Login", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    def post(self, email: str, password: str, name: Optional[str] = None):$/", "language": "Python", "kind": "member", "signature": "(self, email: str, password: str, name: Optional[str] = None)", "scope": "Register", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    token = fields.String(description=\"JWT access token\")$/", "language": "Python", "kind": "variable", "scope": "AuthResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    updated_at = fields.String(dump_only=True, description=\"ISO timestamp when last updated\")$/", "language": "Python", "kind": "variable", "scope": "UserSchema", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/auth.py", "pattern": "/^    user = fields.Nested(UserSchema, description=\"Authenticated user info\")$/", "language": "Python", "kind": "variable", "scope": "AuthResponseSchema", "scopeKind": "class"}], "hash": "51ebab67cbf4961d599ddba679ce3b08", "format-version": 4, "code-base-name": "todo_backend_api", "filename": "todo_backend_api/app/routes/auth.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "created_at = fields.String(dump_only=True, description=\"ISO timestamp when created\")", "scope": "UserSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "email = fields.Email(required=True, description=\"Email for new account\")", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "email = fields.Email(required=True, description=\"Registered email\")", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "email = fields.Email(required=True, description=\"User email\")", "scope": "UserSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = fields.String(dump_only=True, description=\"User ID\")", "scope": "UserSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "name = fields.String(required=False, allow_none=True, description=\"Optional display name\")", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "name = fields.String(required=False, allow_none=True, description=\"User display name\")", "scope": "UserSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(", "scope": "RegisterSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "password = fields.String(required=True, load_only=True, description=\"Account password\")", "scope": "LoginSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "token = fields.String(description=\"JWT access token\")", "scope": "AuthResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = fields.String(dump_only=True, description=\"ISO timestamp when last updated\")", "scope": "UserSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "user = fields.Nested(UserSchema, description=\"Authenticated user info\")", "scope": "AuthResponseSchema", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"18": ""}]}