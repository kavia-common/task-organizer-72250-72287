{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for task management using Flask, including CRUD operations, search, filter, sorting, pagination, and hierarchical (subtask) handling. It also contains schema validation, user authentication, and database interaction logic.", "external_files": ["app.services.db", ".auth"], "external_methods": ["_decode_jwt_from_request", "_now_iso", "get_db"], "published": ["blp"], "classes": [{"name": "PaginationSchema", "description": "Schema for pagination response metadata."}, {"name": "TaskBaseSchema", "description": "Schema for creating a new task."}, {"name": "TaskUpdateSchema", "description": "Schema for updating an existing task."}, {"name": "TaskQuerySchema", "description": "Schema for querying/Search tasks."}, {"name": "TaskSchema", "description": "Schema for task object representation (public view)."}, {"name": "TaskListResponseSchema", "description": "Schema for list of tasks with pagination metadata."}], "methods": [{"name": "str _require_user()", "description": "Retrieves user ID from JWT token, raises error if invalid.", "scope": "", "scopeKind": ""}, {"name": "Optional[ObjectId] _oid(obj_id: Optional[str])", "description": "Converts string to Mongo ObjectId, handling special cases.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _serialize_task(doc: Dict[str, Any])", "description": "Converts a Mongo document to a serializable task dictionary.", "scope": "", "scopeKind": ""}, {"name": "Optional[datetime] _parse_iso(dt_str: Optional[str])", "description": "Parses ISO 8601 date string into datetime object.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] _build_subtree(user_id: str, root_id: ObjectId)", "description": "Recursively fetches a task and its subtasks as nested structure.", "scope": "", "scopeKind": ""}, {"name": "List[ObjectId] _collect_descendants(user_id: str, root_oid: ObjectId)", "description": "Collects all descendant task IDs for cascading operations.", "scope": "", "scopeKind": ""}, {"name": "bool _has_children(user_id: str, oid: ObjectId)", "description": "Checks if a task has any subtasks.", "scope": "", "scopeKind": ""}, {"name": "None _prevent_circular_parent(user_id: str, task_oid: ObjectId, new_parent_oid: Optional[ObjectId])", "description": "Validates that a new parent does not create circular hierarchy.", "scope": "", "scopeKind": ""}, {"name": "List[Tuple[str,int]] _make_sort(sort_by: str, sort_order: str)", "description": "Creates Mongo sort specification based on given field and order.", "scope": "", "scopeKind": ""}, {"name": "get( self, q: Optional[str] = None, completed: Optional[bool] = None, priority: Optional[int] = None, due_before: Optional[str] = None, due_after: Optional[str] = None, parent_id: Optional[str] = None, sort_by: str = \"created_at\", sort_order: str = \"desc\", page: int = 1, page_size: int = 20, )", "description": "Handles GET request for listing tasks with filtering, sorting, pagination.", "scope": "TasksCollection", "scopeKind": "class"}, {"name": "post( self, title: str, description: Optional[str] = None, priority: Optional[int] = None, estimate_minutes: Optional[int] = None, due_date: Optional[str] = None, parent_id: Optional[str] = None, completed: bool = False, )", "description": "Handles POST request for creating a new task.", "scope": "TasksCollection", "scopeKind": "class"}, {"name": "get(self, task_id: str)", "description": "Handles GET request for retrieving a specific task (with optional subtasks).", "scope": "TaskResource", "scopeKind": "class"}, {"name": "patch(self, task_id: str, **updates: Any)", "description": "Handles PATCH request for partially updating a task.", "scope": "TaskResource", "scopeKind": "class"}, {"name": "delete(self, task_id: str)", "description": "Handles DELETE request for removing a task, with optional cascade delete.", "scope": "TaskResource", "scopeKind": "class"}, {"name": "post(self, task_id: str)", "description": "Marks a task and its descendants as completed.", "scope": "TaskComplete", "scopeKind": "class"}, {"name": "at_least_one(self, data, **kwargs)", "scope": "TaskUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str,Any]] fetch_children(parent_oid: ObjectId)", "scope": "_build_subtree", "scopeKind": "function", "description": "unavailable"}], "calls": ["get_db()", "_decode_jwt_from_request()", "_now_iso()", "_serialize_task()", "_parse_iso()", "_build_subtree()", "_collect_descendants()", "_has_children()", "_prevent_circular_parent()", "_make_sort()"], "search-terms": ["Flask endpoints", "Task management API", "MongoDB task hierarchy", "JWT authentication", "Task filters", "Subtask handling", "Pagination", "Task schema validation"], "state": 2, "file_id": 9, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "PaginationSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class PaginationSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskBaseSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskBaseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskComplete", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskComplete(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskListResponseSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskListResponseSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskQuerySchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskQuerySchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskResource", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskResource(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TaskUpdateSchema", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TaskUpdateSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TasksCollection", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^class TasksCollection(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_build_subtree", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _build_subtree(user_id: str, root_id: ObjectId) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(user_id: str, root_id: ObjectId)"}, {"_type": "tag", "name": "_collect_descendants", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _collect_descendants(user_id: str, root_oid: ObjectId) -> List[ObjectId]:$/", "language": "Python", "typeref": "typename:List[ObjectId]", "kind": "function", "signature": "(user_id: str, root_oid: ObjectId)"}, {"_type": "tag", "name": "_has_children", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _has_children(user_id: str, oid: ObjectId) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(user_id: str, oid: ObjectId)"}, {"_type": "tag", "name": "_make_sort", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _make_sort(sort_by: str, sort_order: str) -> List[Tuple[str, int]]:$/", "language": "Python", "typeref": "typename:List[Tuple[str,int]]", "kind": "function", "signature": "(sort_by: str, sort_order: str)"}, {"_type": "tag", "name": "_oid", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _oid(obj_id: Optional[str]) -> Optional[ObjectId]:$/", "language": "Python", "typeref": "typename:Optional[ObjectId]", "kind": "function", "signature": "(obj_id: Optional[str])"}, {"_type": "tag", "name": "_parse_iso", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _parse_iso(dt_str: Optional[str]) -> Optional[datetime]:$/", "language": "Python", "typeref": "typename:Optional[datetime]", "kind": "function", "signature": "(dt_str: Optional[str])"}, {"_type": "tag", "name": "_prevent_circular_parent", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _prevent_circular_parent(user_id: str, task_oid: ObjectId, new_parent_oid: Optional[ObjectId/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(user_id: str, task_oid: ObjectId, new_parent_oid: Optional[ObjectId])"}, {"_type": "tag", "name": "_require_user", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _require_user() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_serialize_task", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^def _serialize_task(doc: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(doc: Dict[str, Any])"}, {"_type": "tag", "name": "at_least_one", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def at_least_one(self, data, **kwargs):  # noqa: ANN001$/", "language": "Python", "kind": "member", "signature": "(self, data, **kwargs)", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "completed", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    completed = fields.Boolean($/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "completed", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    completed = fields.Boolean(description=\"Completion status\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "completed", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    completed = fields.Boolean(description=\"Completion status\")$/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "completed", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    completed = fields.Boolean(required=False, description=\"Filter by completion\")$/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "completed_at", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    completed_at = fields.String(allow_none=True, description=\"When task was completed (ISO)\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    created_at = fields.String(dump_only=True, description=\"Created ISO timestamp\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def delete(self, task_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, task_id: str)", "scope": "TaskResource", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    description = fields.String(allow_none=True, description=\"Detailed description\")$/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    description = fields.String(allow_none=True, description=\"Detailed description\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    description = fields.String(allow_none=True, description=\"Detailed description\")$/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "due_after", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    due_after = fields.String(required=False, description=\"ISO timestamp; due_date >= this\")$/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "due_before", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    due_before = fields.String(required=False, description=\"ISO timestamp; due_date <= this\")$/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "due_date", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    due_date = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "due_date", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    due_date = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "due_date", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    due_date = fields.String(allow_none=True, description=\"Due date ISO 8601\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "estimate_minutes", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    estimate_minutes = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "estimate_minutes", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    estimate_minutes = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "estimate_minutes", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    estimate_minutes = fields.Integer(allow_none=True, description=\"Estimated time in minutes\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "fetch_children", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def fetch_children(parent_oid: ObjectId) -> List[Dict[str, Any]]:$/", "file": true, "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "function", "signature": "(parent_oid: ObjectId)", "scope": "_build_subtree", "scopeKind": "function"}, {"_type": "tag", "name": "first_page", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    first_page = fields.Integer(description=\"First page index (1-based)\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def get($/", "language": "Python", "kind": "member", "signature": "( self, q: Optional[str] = None, completed: Optional[bool] = None, priority: Optional[int] = None, due_before: Optional[str] = None, due_after: Optional[str] = None, parent_id: Optional[str] = None, sort_by: str = \"created_at\", sort_order: str = \"desc\", page: int = 1, page_size: int = 20, )", "scope": "TasksCollection", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def get(self, task_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, task_id: str)", "scope": "TaskResource", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    id = fields.String(dump_only=True, description=\"Task ID\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    items = fields.List(fields.Nested(TaskSchema), description=\"List of tasks\")$/", "language": "Python", "kind": "variable", "scope": "TaskListResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "last_page", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    last_page = fields.Integer(description=\"Last page index (1-based)\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "meta", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    meta = fields.Nested(PaginationSchema, description=\"Pagination metadata\")$/", "language": "Python", "kind": "variable", "scope": "TaskListResponseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "next_page", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    next_page = fields.Integer(allow_none=True, description=\"Next page if available\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "page", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    page = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "page", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    page = fields.Integer(description=\"Current page (1-based)\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "page_size", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    page_size = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "parent_id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    parent_id = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "parent_id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    parent_id = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "parent_id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    parent_id = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "parent_id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    parent_id = fields.String(allow_none=True, description=\"Parent task id if subtask\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "patch", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def patch(self, task_id: str, **updates: Any):$/", "language": "Python", "kind": "member", "signature": "(self, task_id: str, **updates: Any)", "scope": "TaskResource", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def post($/", "language": "Python", "kind": "member", "signature": "( self, title: str, description: Optional[str] = None, priority: Optional[int] = None, estimate_minutes: Optional[int] = None, due_date: Optional[str] = None, parent_id: Optional[str] = None, completed: bool = False, )", "scope": "TasksCollection", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    def post(self, task_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, task_id: str)", "scope": "TaskComplete", "scopeKind": "class"}, {"_type": "tag", "name": "previous_page", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    previous_page = fields.Integer(allow_none=True, description=\"Previous page if available\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "priority", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    priority = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "priority", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    priority = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "priority", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    priority = fields.Integer($/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "priority", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    priority = fields.Integer(allow_none=True, description=\"Priority (1-5)\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    q = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "sort_by", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    sort_by = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "sort_order", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    sort_order = fields.String($/", "language": "Python", "kind": "variable", "scope": "TaskQuerySchema", "scopeKind": "class"}, {"_type": "tag", "name": "subtasks", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    subtasks = fields.List(fields.Nested(lambda: TaskSchema(exclude=(\"subtasks\",))), dump_only=T/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    title = fields.String(required=True, description=\"Task title\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    title = fields.String(required=True, validate=validate.Length(min=1), description=\"Task titl/", "language": "Python", "kind": "variable", "scope": "TaskBaseSchema", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    title = fields.String(validate=validate.Length(min=1), description=\"Task title\")$/", "language": "Python", "kind": "variable", "scope": "TaskUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    total = fields.Integer(description=\"Total number of items\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "total_pages", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    total_pages = fields.Integer(description=\"Total number of pages\")$/", "language": "Python", "kind": "variable", "scope": "PaginationSchema", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    updated_at = fields.String(dump_only=True, description=\"Updated ISO timestamp\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/task-organizer-72250-72287/todo_backend_api/app/routes/tasks.py", "pattern": "/^    user_id = fields.String(dump_only=True, description=\"Owner user id\")$/", "language": "Python", "kind": "variable", "scope": "TaskSchema", "scopeKind": "class"}], "hash": "d25a031d1a58f495d45589fe3f69d973", "format-version": 4, "code-base-name": "todo_backend_api", "filename": "todo_backend_api/app/routes/tasks.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "completed = fields.Boolean(", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "completed = fields.Boolean(description=\"Completion status\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "completed = fields.Boolean(required=False, description=\"Filter by completion\")", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "completed_at = fields.String(allow_none=True, description=\"When task was completed (ISO)\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = fields.String(dump_only=True, description=\"Created ISO timestamp\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "description = fields.String(allow_none=True, description=\"Detailed description\")", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "due_after = fields.String(required=False, description=\"ISO timestamp; due_date >= this\")", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "due_before = fields.String(required=False, description=\"ISO timestamp; due_date <= this\")", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "due_date = fields.String(", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "due_date = fields.String(allow_none=True, description=\"Due date ISO 8601\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "estimate_minutes = fields.Integer(", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "estimate_minutes = fields.Integer(allow_none=True, description=\"Estimated time in minutes\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "first_page = fields.Integer(description=\"First page index (1-based)\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "id = fields.String(dump_only=True, description=\"Task ID\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "items = fields.List(fields.Nested(TaskSchema), description=\"List of tasks\")", "scope": "TaskListResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "last_page = fields.Integer(description=\"Last page index (1-based)\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "meta = fields.Nested(PaginationSchema, description=\"Pagination metadata\")", "scope": "TaskListResponseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "next_page = fields.Integer(allow_none=True, description=\"Next page if available\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "page = fields.Integer(", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "page = fields.Integer(description=\"Current page (1-based)\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "page_size = fields.Integer(", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "parent_id = fields.String(", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "parent_id = fields.String(allow_none=True, description=\"Parent task id if subtask\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "previous_page = fields.Integer(allow_none=True, description=\"Previous page if available\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "priority = fields.Integer(", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "priority = fields.Integer(allow_none=True, description=\"Priority (1-5)\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "q = fields.String(", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "sort_by = fields.String(", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "sort_order = fields.String(", "scope": "TaskQuerySchema", "scopeKind": "class", "description": "unavailable"}, {"name": "subtasks = fields.List(fields.Nested(lambda: TaskSchema(exclude=(\"subtasks\",))), dump_only=T/", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "title = fields.String(required=True, description=\"Task title\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "title = fields.String(required=True, validate=validate.Length(min=1), description=\"Task titl/", "scope": "TaskBaseSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "title = fields.String(validate=validate.Length(min=1), description=\"Task title\")", "scope": "TaskUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "total = fields.Integer(description=\"Total number of items\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "total_pages = fields.Integer(description=\"Total number of pages\")", "scope": "PaginationSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = fields.String(dump_only=True, description=\"Updated ISO timestamp\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = fields.String(dump_only=True, description=\"Owner user id\")", "scope": "TaskSchema", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"21": ""}]}